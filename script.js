function calculate() {
  let V=0, A=0, K=0, Ad=0;
  const radios = document.querySelectorAll("input[type=radio]:checked");
  radios.forEach(r => {
    const val = r.value;
    const type = val.replace(/[0-9]/g,''); // V, A, K, Ad
    const score = parseInt(val.replace(/\D/g,'')); // l·∫•y s·ªë
    if(type==="V") V+=score;
    if(type==="A") A+=score;
    if(type==="K") K+=score;
    if(type==="Ad") Ad+=score;
  });

  let maxScore = Math.max(V,A,K,Ad);
  let strongest = [];
  if(V===maxScore) strongest.push("Visual (Th·ªã gi√°c)");
  if(A===maxScore) strongest.push("Auditory (Th√≠nh gi√°c)");
  if(K===maxScore) strongest.push("Kinaesthetic (C·∫£m x√∫c)");
  if(Ad===maxScore) strongest.push("Auditory Digital (N·ªôi t√¢m)");

  let meanings = {
    "Visual (Th·ªã gi√°c)": `
      - H·ªçc v√† ghi nh·ªõ t·ªët qua h√¨nh ·∫£nh, m√†u s·∫Øc, s∆° ƒë·ªì, video.<br>
      - Th∆∞·ªùng d√πng t·ª´ ng·ªØ nh∆∞ "t√¥i th·∫•y", "tr√¥ng c√≥ v·∫ª".<br>
      - Ch√∫ √Ω ƒë·∫øn c√°ch tr√¨nh b√†y, ngo·∫°i h√¨nh, chi ti·∫øt tr·ª±c quan.<br>
      - M·∫°nh ·ªü vi·ªác x·ª≠ l√Ω th√¥ng tin ph·ª©c t·∫°p khi c√≥ minh h·ªça tr·ª±c quan.<br>
      - H·∫°n ch·∫ø: kh√≥ t·∫≠p trung n·∫øu ch·ªâ nghe m√† kh√¥ng c√≥ h√¨nh ·∫£nh minh h·ªça.`,
    "Auditory (Th√≠nh gi√°c)": `
      - Ti·∫øp nh·∫≠n th√¥ng tin qua nghe gi·∫£ng, th·∫£o lu·∫≠n, tr√≤ chuy·ªán.<br>
      - Ghi nh·ªõ t·ªët √¢m thanh, gi·ªçng n√≥i, giai ƒëi·ªáu.<br>
      - Th∆∞·ªùng d√πng t·ª´ ng·ªØ nh∆∞ "t√¥i nghe th·∫•y", "nghe h·ª£p l√Ω".<br>
      - M·∫°nh khi h·ªçc qua thuy·∫øt tr√¨nh, trao ƒë·ªïi nh√≥m.<br>
      - H·∫°n ch·∫ø: d·ªÖ b·ªã ph√¢n t√°n trong m√¥i tr∆∞·ªùng ·ªìn √†o, kh√≥ nh·ªõ khi ch·ªâ ƒë·ªçc.`,
    "Kinaesthetic (C·∫£m x√∫c)": `
      - H·ªçc hi·ªáu qu·∫£ khi tr·∫£i nghi·ªám, th·ª±c h√†nh, v·∫≠n ƒë·ªông, ch·∫°m v√†o ƒë·ªì v·∫≠t.<br>
      - Th∆∞·ªùng nh·ªõ b·∫±ng c·∫£m gi√°c, tr·∫£i nghi·ªám c∆° th·ªÉ.<br>
      - Hay d√πng t·ª´ ng·ªØ nh∆∞ "t√¥i c·∫£m th·∫•y", "c·∫£m gi√°c".<br>
      - M·∫°nh ·ªü vi·ªác h·ªçc qua h√†nh ƒë·ªông, tr·∫£i nghi·ªám th·ª±c t·∫ø.<br>
      - H·∫°n ch·∫ø: kh√≥ ti·∫øp thu trong m√¥i tr∆∞·ªùng h·ªçc ch·ªâ nghe ‚Äì nh√¨n m√† kh√¥ng c√≥ ho·∫°t ƒë·ªông th·ª±c h√†nh.`,
    "Auditory Digital (N·ªôi t√¢m)": `
      - Thi√™n v·ªÅ t∆∞ duy logic, ph√¢n t√≠ch, ng√¥n ng·ªØ v√† kh√°i ni·ªám tr·ª´u t∆∞·ª£ng.<br>
      - Ti·∫øp nh·∫≠n th√¥ng tin t·ªët qua ƒë·ªçc, vi·∫øt, ph√¢n t√≠ch.<br>
      - Th∆∞·ªùng n√≥i "t√¥i nghƒ© r·∫±ng", "ƒëi·ªÅu h·ª£p l√Ω l√†".<br>
      - M·∫°nh ·ªü ph√¢n t√≠ch, l·∫≠p k·∫ø ho·∫°ch, x·ª≠ l√Ω l√Ω thuy·∫øt.<br>
      - H·∫°n ch·∫ø: c√≥ th·ªÉ b·ªè qua y·∫øu t·ªë c·∫£m x√∫c, kh√≥ h√≤a nh·∫≠p khi giao ti·∫øp c·∫£m t√≠nh.`
  };

  let explanation = strongest.map(s => `<br><strong>${s}:</strong><br>${meanings[s]}`).join("<br><br>");

  document.getElementById("result").style.display="block";
  document.getElementById("result").innerHTML=
    `T·ªïng ƒëi·ªÉm:<br><br>
     Visual: ${V} | Auditory: ${A} | Kinaesthetic: ${K} | Auditory Digital: ${Ad}<br><br>
     üëâ Phong c√°ch n·ªïi tr·ªôi: <span class="highlight">${strongest.join(", ")}</span><br><br>
     ${explanation}`;
}
